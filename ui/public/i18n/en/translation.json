{
  "common": {
    "required": "Required",
    "work_in_progress": "Work in progress",
    "processing": "Processing..."
  },
  "status": {
    "title": "Status",
    "app_instance": "App instance",
    "services": "Service | Services",
    "app_images": "App image | App images",
    "app_volumes": "App volume | App volumes",
    "installation_node": "Installation node",
    "node": "Node",
    "name": "Name",
    "size": "Size",
    "created": "Created",
    "mount": "Mount",
    "no_services": "No services",
    "no_images": "No images",
    "no_volumes": "No volumes",
    "jellyfin_webapp": "jellyfin webapp",
    "not_configured": "Not configured",
    "open_webapp": "Open jellyfin",
    "configure": "Configure"
  },
  "settings": {
    "title": "Settings",
    "configure_instance": "Configure {instance}",
    "save": "Save",
    "jellyfin_fqdn": "jellyfin hostname (FQDN)",
    "lets_encrypt": "Request LE Certificate",
    "http_to_https": "Force HTTPS",
    "enabled": "Enabled",
    "disabled": "Disabled",
    "advanced": "Advanced",
    "configuring": "Configuring",
    "instance_configuration": "Configure jellyfin",
    "domain_already_used_in_traefik": "Domain already used in traefik",
    "host_pattern": "Must be a valid fully qualified domain name",
    "host_format": "Must be a valid fully qualified domain name",
    "storage_path": "Media path",
    "storage_path_helper": "Jellyfin stores data in the volume 'jellyfin-media' by default. To use a mount of samba or an  external disk instead, enter a full path like '/mnt/jellyfin', make sure this location already exists and is a properly formatted and mounted disk. But remember, changing the storage path means it won't be part of the backup."
  },
  "about": {
    "title": "About"
  },
  "task": {
    "cannot_create_task": "Cannot create task {action}"
  },
  "action": {
    "get-status": "Get status",
    "get-configuration": "Get configuration",
    "configure-module": "Configure module",
    "get-module-info": "Get module info",
    "get-name": "Get name",
    "list-backup-repositories": "List backup repositories",
    "list-backups": "List backups",
    "list-installed-modules": "List installed modules"
  },
  "error": {
    "error": "Error",
    "generic_error": "Something went wrong",
    "validation_error": "Validation error",
    "network_error": "Network error",
    "network_timeout": "Network timeout",
    "401": "Invalid authentication",
    "403": "Operation not authorized",
    "404": "Resource not found",
    "cannot_retrieve_module_info": "Cannot retrieve module info",
    "cannot_retrieve_installed_modules": "Cannot retrieve installed modules",
    "cannot_retrieve_configuration": "Cannot retrieve configuration"
  }
}
